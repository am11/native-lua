version: 5.3.4.{build}

image:
  - Visual Studio 2017
  - Ubuntu

init:
  - git config --global core.autocrlf input

install:
  - ps: |
      if ($isWindows) {
        $rmpath = "Docker", "SQL", "Mercurial", "Subversion", "Maven", "CMake", "nodejs", "nunit", "nuget", "java", "xunit", "go", "python", "Amazon", "ruby", "perl", "Azur", "Webdriver", "Coverity", "Octopus", "erl9", "LLVM", "dotnet", "iojs", "curl", "Yarn", "chocolatey", "npm"
        foreach ($i in $rmpath) {
          $env:path = ($env:path -split ";").Where({!($_ -like "*$i*")}) -join ";"
        }
      }
  - cmd: set PATH=C:\msys64\usr\bin;%PATH%
  - ps: |
      if ($isWindows) {
        Write-Host New `$env:Path
        Write-Host ($env:Path).Replace(';',"`n")
        }
  - cmd: C:\Miniconda37-x64\Scripts\activate
  - cmd: conda install pylint flake8 vs2017_win-64 -c anaconda -y -q
  - cmd: python --version
  - sh: whereis python
  - sh: PATH=/opt/az/bin:$PATH
  - sh: python3.6 --version

before_build:
  # ensure that only well formated wscripts are checked in
  - cmd: python waf --help
  - cmd: flake8
  - cmd: pylint wscript
  - cmd: pylint lua\wscript

build_script:
  # Windows gcc
  - cmd: python waf configure --check-c-compiler=gcc
  - cmd: python waf build
  - cmd: python waf install
  - cmd: python waf uninstall
  - cmd: python waf distclean
  # Windows x64 msvc
  - cmd: python waf configure
  - cmd: python waf build
  - cmd: python waf install
  - cmd: python waf uninstall
  - cmd: python waf distclean
  - cmd: deactivate
  # Linux gcc
  - sh: python3.6 waf configure
  - sh: python3.6 waf build
  - sh: sudo python3.6 waf install
  - sh: sudo python3.6 waf uninstall
  - sh: python3.6 waf distclean

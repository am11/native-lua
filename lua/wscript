#!/usr/bin/env python3
# encoding: utf-8

import os


def build(bld):
    basepath_src = os.path.join('lua-5.3.4', 'src')
    sources = ' '.join([
        os.path.join(basepath_src, 'lapi.c'),
        os.path.join(basepath_src, 'lcode.c'),
        os.path.join(basepath_src, 'ldo.c'),
        os.path.join(basepath_src, 'lctype.c'),
        os.path.join(basepath_src, 'ldebug.c'),
        os.path.join(basepath_src, 'ldump.c'),
        os.path.join(basepath_src, 'lfunc.c'),
        os.path.join(basepath_src, 'lgc.c'),
        os.path.join(basepath_src, 'llex.c'),
        os.path.join(basepath_src, 'lmem.c'),
        os.path.join(basepath_src, 'lobject.c'),
        os.path.join(basepath_src, 'lopcodes.c'),
        os.path.join(basepath_src, 'lparser.c'),
        os.path.join(basepath_src, 'lstate.c'),
        os.path.join(basepath_src, 'lstring.c'),
        os.path.join(basepath_src, 'ltable.c'),
        os.path.join(basepath_src, 'ltm.c'),
        os.path.join(basepath_src, 'lundump.c'),
        os.path.join(basepath_src, 'lvm.c'),
        os.path.join(basepath_src, 'lzio.c'),
        os.path.join(basepath_src, 'lauxlib.c'),
        os.path.join(basepath_src, 'lbaselib.c'),
        os.path.join(basepath_src, 'lbitlib.c'),
        os.path.join(basepath_src, 'lcorolib.c'),
        os.path.join(basepath_src, 'ldblib.c'),
        os.path.join(basepath_src, 'liolib.c'),
        os.path.join(basepath_src, 'lmathlib.c'),
        os.path.join(basepath_src, 'loslib.c'),
        os.path.join(basepath_src, 'lstrlib.c'),
        os.path.join(basepath_src, 'ltablib.c'),
        os.path.join(basepath_src, 'lutf8lib.c'),
        os.path.join(basepath_src, 'loadlib.c'),
        os.path.join(basepath_src, 'linit.c')])

    if bld.env.DEST_OS == 'win32':
        # if on Windows we need to set LUA_BUILD_AS_DLL for msvc and gcc
        # for all other OS we do not need to create shared library
        bld.shlib(source=sources,
                  target='lua',
                  defines='LUA_BUILD_AS_DLL',
                  name='shared-lua-library'
                  )
    else:
        bld.shlib(source=sources,
                  target='lua',
                  name='shared-lua-library'
                  )

    bld.program(source=os.path.join(basepath_src, 'lua.c'),
                target='lua',
                use='shared-lua-library',
                linkflags='',
                ldflags=''
                )

    bld.stlib(source=sources,
              target='lua',
              name='static-lua-library'
              )
    bld.program(source=os.path.join(basepath_src, 'luac.c'),
                target='luac',
                use='static-lua-library',
                )

    bld.install_files('${HTMLDIR}', ['lua-5.3.4/doc/contents.html',
                                     'lua-5.3.4/doc/index.css',
                                     'lua-5.3.4/doc/logo.gif',
                                     'lua-5.3.4/doc/lua.css',
                                     'lua-5.3.4/doc/manual.css',
                                     'lua-5.3.4/doc/manual.html',
                                     'lua-5.3.4/doc/osi-certified-72x60.png',
                                     'lua-5.3.4/doc/readme.html'])
    bld.install_files('${MANDIR}', 'lua-5.3.4/doc/lua.1')
    bld.install_files('${MAN1DIR}', 'lua-5.3.4/doc/luac.1')
    bld.install_files('${INCLUDEDIR}', ['lua-5.3.4/src/lua.h',
                                        'lua-5.3.4/src/luaconf.h',
                                        'lua-5.3.4/src/lualib.h',
                                        'lua-5.3.4/src/lauxlib.h',
                                        'lua-5.3.4/src/lua.hpp'])
